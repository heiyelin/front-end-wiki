(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{287:function(e,t,s){"use strict";s.r(t);var v=s(2),l=Object(v.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[e._v("#")]),e._v(" 布局")]),e._v(" "),s("p",[e._v("CSS 页面布局技术允许我们拾取网页中的元素，并且控制它们相对正常布局流、周边元素、父容器或者主视口/窗口的位置。")]),e._v(" "),s("p",[e._v("布局有如下几种：")]),e._v(" "),s("ul",[s("li",[e._v("正常布局流")]),e._v(" "),s("li",[e._v("浮动"),s("code",[e._v("float")])]),e._v(" "),s("li",[e._v("定位"),s("code",[e._v("postion")])]),e._v(" "),s("li",[e._v("弹性布局"),s("code",[e._v("Flex")])]),e._v(" "),s("li",[e._v("网格布局"),s("code",[e._v("Grid")])]),e._v(" "),s("li",[e._v("表格布局")]),e._v(" "),s("li",[e._v("多列布局"),s("code",[e._v("column")])])]),e._v(" "),s("h2",{attrs:{id:"正常布局流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正常布局流"}},[e._v("#")]),e._v(" 正常布局流")]),e._v(" "),s("p",[e._v("在正常布局流中，元素按照其在 HTML 中的先后位置至上而下布局，在这个过程中，行内元素水平排列，直到当行被占满然后换行，块级元素则会被渲染为完整的一个新行， 除非另外指定，否则所有元素默认都是普通流定位，也可以说，普通流中元素的位置由该元素在 HTML 文档中的位置决定。")]),e._v(" "),s("p",[s("code",[e._v("display")]),e._v(" 属性允许我们更改默认的布局样式，指定了元素的显示类型，它包含两类基础特征，用于指定元素怎样生成盒模型——外部显示类型定义了元素怎样参与流式布局的处理，内部显示类型定义了元素内子元素的布局方式。该属性有以下常见属性值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("inline")]),e._v(": 行内元素")]),e._v(" "),s("li",[s("code",[e._v("block")]),e._v("： 块级元素")]),e._v(" "),s("li",[s("code",[e._v("inline-block(inline block)")]),e._v("： 对内是行内元素，对外部是块级元素")]),e._v(" "),s("li",[s("code",[e._v("flex")]),e._v(": 弹性布局")]),e._v(" "),s("li",[s("code",[e._v("grid")]),e._v(": 网格布局")]),e._v(" "),s("li",[s("code",[e._v("table")]),e._v(": 表格布局")]),e._v(" "),s("li",[s("code",[e._v("none")]),e._v(": 从可访问性树中移除")])]),e._v(" "),s("h2",{attrs:{id:"浮动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮动"}},[e._v("#")]),e._v(" 浮动")]),e._v(" "),s("ol",[s("li",[e._v("float 属性\n"),s("code",[e._v("float")]),e._v("属性最早是用于图像与文本的混合排版，现在多使用它来创建多列布局。该属性包含这些值：")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("static")]),e._v(": 默认值，不浮动")]),e._v(" "),s("li",[s("code",[e._v("left")]),e._v("： 将元素浮动到左侧")]),e._v(" "),s("li",[s("code",[e._v("right")]),e._v(": 将元素浮动到右侧")])]),e._v(" "),s("p",[e._v("只要元素设置了"),s("code",[e._v("float")]),e._v("属性，该元素就会脱离正常的文档布局流，并且吸附到父容器的某一侧。在正常布局中位于该浮动元素之下的内容，此时会围绕着浮动元素，填满其另一侧的空间。")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[e._v("浮动的弊端")])]),e._v(" "),s("ul",[s("li",[e._v("造成父元素的塌陷，父元素无法正确计算高度")]),e._v(" "),s("li",[e._v("固定列会造成溢出")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("清除浮动")])]),e._v(" "),s("ul",[s("li",[e._v("父元素形成 BFC，添加"),s("code",[e._v("overflow: hidden/auto")])]),e._v(" "),s("li",[e._v("使用伪元素")])]),e._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[e._v(".clearfix:after")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v("visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" both"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[e._v(".clearfix")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  *"),s("span",{pre:!0,attrs:{class:"token property"}},[e._v("zoom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("h2",{attrs:{id:"定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定位"}},[e._v("#")]),e._v(" 定位")]),e._v(" "),s("blockquote",[s("p",[e._v("定位允许您从正常的文档流布局中取出元素，并使它们具有不同的行为，例如放在另一个元素的上面，或者始终保持在浏览器视窗内的同一位置。")])]),e._v(" "),s("p",[s("code",[e._v("postion")]),e._v("属性允许我们更改页面上元素的定位，其包含以下值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("static")]),e._v(": 默认值，无任何变化")]),e._v(" "),s("li",[s("code",[e._v("relative")]),e._v(": 相对定位，元素先放置在未添加定位时的位置，再在不改变页面布局的前提下调整元素位置")]),e._v(" "),s("li",[s("code",[e._v("absolute")]),e._v(": 绝对定位，不为元素预留空间，通过指定元素相对于最近的非 static 定位祖先元素的偏移，来确定元素位置。")]),e._v(" "),s("li",[s("code",[e._v("fixed")]),e._v(": 固定定位，不为元素预留空间，而是通过指定元素相对于屏幕视口（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变。打印时，元素会出现在的每页的固定位置。"),s("code",[e._v("fixed")]),e._v(" 属性会创建新的层叠上下文。当元素祖先的 "),s("code",[e._v("transform")]),e._v(" 属性非 "),s("code",[e._v("none")]),e._v(" 时，容器由视口改为该祖先。")]),e._v(" "),s("li",[s("code",[e._v("sticky")]),e._v("： 粘性布局，最初会被当作是 relative，相对于原来的位置进行偏移；一旦超过一定阈值之后，会被当成 fixed 定位，相对于视口进行定位。")])]),e._v(" "),s("p",[s("strong",[e._v("设置"),s("code",[e._v("position")]),e._v("时，可以设置"),s("code",[e._v("top")]),e._v(", "),s("code",[e._v("left")]),e._v(", "),s("code",[e._v("right")]),e._v(", "),s("code",[e._v("bottom")]),e._v("等偏移量大小。")])]),e._v(" "),s("ol",[s("li",[e._v("相对定位")]),e._v(" "),s("li",[e._v("绝对定位")]),e._v(" "),s("li",[e._v("固定定位")]),e._v(" "),s("li",[e._v("粘性布局")])]),e._v(" "),s("h2",{attrs:{id:"flex-弹性布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-弹性布局"}},[e._v("#")]),e._v(" Flex 弹性布局")]),e._v(" "),s("p",[e._v("flexbox，是一种一维的布局模型。它给 flexbox 的子元素之间提供了强大的空间分布和对齐能力。")]),e._v(" "),s("p",[e._v("在认识一个布局之前，需要了解布局所需要的一些要素，方向，对齐，顺序，大小。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/flexbox-layouts-7abd58-2019-12-3.png?x-oss-process=style/alin",alt:"flexbox-layouts-7abd58-2019-12-3.png"}})]),e._v(" "),s("h3",{attrs:{id:"基础概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[e._v("#")]),e._v(" 基础概念")]),e._v(" "),s("ol",[s("li",[e._v("flex 主轴与交叉轴")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/flex-axes-2019-12-3.png?x-oss-process=style/alin",alt:"flex-axes-2019-12-3.png"}})]),e._v(" "),s("p",[e._v("主轴是由"),s("code",[e._v("flex-direction")]),e._v(" 定义，默认是"),s("code",[e._v("row")]),e._v("，即水平方向延展，则交叉轴则是垂直于主轴并向下延展的。")]),e._v(" "),s("p",[s("strong",[e._v("flex 的特性之一就是 flex 容器里的子元素是沿着主轴与交叉轴分布的。")])]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[e._v("flex 容器")])]),e._v(" "),s("p",[e._v("使用"),s("code",[e._v("display: flex")]),e._v("可以将某个容器元素变为 flex 容器。flex 容器涉及到一下属性：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("flex-direction")])]),e._v(" "),s("li",[s("code",[e._v("flex-wrap")])]),e._v(" "),s("li",[s("code",[e._v("flex-flow")])]),e._v(" "),s("li",[s("code",[e._v("justify-content")])]),e._v(" "),s("li",[s("code",[e._v("align-items")])]),e._v(" "),s("li",[s("code",[e._v("align-content")])])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("flex 元素")])]),e._v(" "),s("p",[e._v("flex 元素指 flex 容器的直系元素。flex 元素涉及到以下属性：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("order")])]),e._v(" "),s("li",[s("code",[e._v("align-self")])]),e._v(" "),s("li",[s("code",[e._v("flex-grow")])]),e._v(" "),s("li",[s("code",[e._v("flex-shrink")])]),e._v(" "),s("li",[s("code",[e._v("flex-basis")])]),e._v(" "),s("li",[s("code",[e._v("flex")])])]),e._v(" "),s("h3",{attrs:{id:"方向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方向"}},[e._v("#")]),e._v(" 方向")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("flex-direction")])])]),e._v(" "),s("p",[e._v("布局的方向取决于主轴的方向， 主轴由 "),s("code",[e._v("flex-direction")]),e._v(" 定义，可以取 4 个值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("row")]),e._v(": 水平延展")]),e._v(" "),s("li",[s("code",[e._v("row-reverse")]),e._v("： 水平反向延展")]),e._v(" "),s("li",[s("code",[e._v("column")]),e._v("： 垂直延展")]),e._v(" "),s("li",[s("code",[e._v("column-reverse")]),e._v("： 垂直方向延展")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/flex-direction-illustration-2019-12-3.jpg?x-oss-process=style/alin",alt:"flex-direction-illustration-2019-12-3.jpg"}})]),e._v(" "),s("p",[e._v("如果你选择了 "),s("code",[e._v("row")]),e._v(" 或者 "),s("code",[e._v("row-reverse")]),e._v("，你的主轴将沿着 "),s("code",[e._v("inline")]),e._v(" 方向延伸，交叉轴就是垂直于主轴向下的。反之如果是"),s("code",[e._v("column")]),e._v("和"),s("code",[e._v("column-reverse")]),e._v("，则主轴与交叉轴相反。")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[e._v("flex-wrap")])])]),e._v(" "),s("p",[e._v("如果一行的 flex 元素的总宽度超出 flex 容器的宽度，则有可能会造成溢出。因此，可以使用"),s("code",[e._v("flex-wrap")]),e._v("进行换行。"),s("code",[e._v("flex-wrap")]),e._v("有以下值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("nowrap")]),e._v("： 不换行（初始值）")]),e._v(" "),s("li",[s("code",[e._v("wrap")]),e._v(": 换行")]),e._v(" "),s("li",[s("code",[e._v("wrap-reverse")]),e._v(": 反向换行")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/flex-wrap-illustration-2019-12-3.jpg?x-oss-process=style/alin",alt:"flex-wrap-illustration-2019-12-3.jpg"}})]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("code",[e._v("flex-flow")])])]),e._v(" "),s("p",[s("code",[e._v("flex-flow")]),e._v("是"),s("code",[e._v("flex-direction")]),e._v("和"),s("code",[e._v("flex-wrap")]),e._v("的合成属性。可以看做"),s("code",[e._v("<'flex-direction'> <'flex-wrap'>")]),e._v("。")]),e._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-flow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" row nowrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对齐"}},[e._v("#")]),e._v(" 对齐")]),e._v(" "),s("p",[e._v("对齐涉及到延主轴或者交叉轴对齐，主轴对应"),s("code",[e._v("justify-content")]),e._v("，交叉轴对应"),s("code",[e._v("align-items")]),e._v("。")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("justify-content")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/justify-content-illustration-2019-12-3.jpg?x-oss-process=style/alin",alt:"justify-content-illustration-2019-12-3.jpg"}})]),e._v(" "),s("p",[s("code",[e._v("justify-content")]),e._v("属性用来使元素在主轴方向上对齐, 有以下值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("flex-start")]),e._v("(initial): 元素从容器的起始线排列")]),e._v(" "),s("li",[s("code",[e._v("flex-end")]),e._v(": 元素从终止线开始排列")]),e._v(" "),s("li",[s("code",[e._v("center")]),e._v(": 在中间排列")]),e._v(" "),s("li",[s("code",[e._v("space-between")]),e._v(": 把元素排列好之后的剩余空间拿出来，平均分配到元素之间，所以元素之间间隔相等")]),e._v(" "),s("li",[s("code",[e._v("space-around")]),e._v(": 使每个元素的左右空间相等")])]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[e._v("align-items")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/align-items-illustration-2019-12-3.jpg?x-oss-process=style/alin",alt:"align-items-illustration-2019-12-3.jpg"}})]),e._v(" "),s("p",[e._v("align-items 属性可以使元素在交叉轴方向对齐。有以下值，")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("stretch")]),e._v("(initial)： 拉伸填充交叉轴")]),e._v(" "),s("li",[s("code",[e._v("flex-start")])]),e._v(" "),s("li",[s("code",[e._v("flex-end")])]),e._v(" "),s("li",[s("code",[e._v("center")])]),e._v(" "),s("li",[s("code",[e._v("baseline")])])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("code",[e._v("align-content")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/align-content-illustration-2019-12-3.jpg?x-oss-process=style/alin",alt:"align-content-illustration-2019-12-3.jpg"}})]),e._v(" "),s("p",[s("code",[e._v("align-content")]),e._v("属性用来设置分配交叉轴上各行的剩余空间。该属性对单行弹性盒子模型无效。该属性有以下值，")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("flex-start")])]),e._v(" "),s("li",[s("code",[e._v("flex-end")])]),e._v(" "),s("li",[s("code",[e._v("center")])]),e._v(" "),s("li",[s("code",[e._v("space-between")])]),e._v(" "),s("li",[s("code",[e._v("space-around")])]),e._v(" "),s("li",[s("code",[e._v("stretch")]),e._v("(initial)")])]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[e._v("align-self")])])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/align-self-illustration-2019-12-3.png?x-oss-process=style/alin",alt:"align-self-illustration-2019-12-3.png"}})]),e._v(" "),s("p",[e._v("使用"),s("code",[e._v("align-self")]),e._v("可以对交叉轴上单个 flex 元素进行对齐。有以下值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("auto")]),e._v("(initial)")]),e._v(" "),s("li",[s("code",[e._v("flex-start")])]),e._v(" "),s("li",[s("code",[e._v("flex-end")])]),e._v(" "),s("li",[s("code",[e._v("center")])]),e._v(" "),s("li",[s("code",[e._v("baseline")])]),e._v(" "),s("li",[s("code",[e._v("scretch")])])]),e._v(" "),s("h3",{attrs:{id:"顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序"}},[e._v("#")]),e._v(" 顺序")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("order")])])]),e._v(" "),s("p",[e._v("使用"),s("code",[e._v("order")]),e._v("可以对 flex 元素进行排序。flex 元素默认是 0。注意的是，"),s("code",[e._v("order")]),e._v("属性进行的排序只是屏幕上的顺序，而不是反映源文档里的顺序。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/order-illustration-2019-12-3.png?x-oss-process=style/alin",alt:"order-illustration-2019-12-3.png"}})]),e._v(" "),s("p",[s("code",[e._v("order")]),e._v("的语法如下：")]),e._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <integer>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h3",{attrs:{id:"大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大小"}},[e._v("#")]),e._v(" 大小")]),e._v(" "),s("p",[e._v("flex 元素的大小可以使用"),s("code",[e._v("flex-grow")]),e._v(", "),s("code",[e._v("flex-shrink")]),e._v(", "),s("code",[e._v("flex-basis")]),e._v("三个属性控制。这三个属性可以决定如何分配剩余的“布局空白”空间，以及超出父容器宽度时如何收缩。")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("flex-basis")])])]),e._v(" "),s("p",[s("code",[e._v("flex-basis")]),e._v("属性定义了该元素的布局空白（available space）的基准值。该属性的默认值是 "),s("code",[e._v("auto")]),e._v("。如果没有给元素设定尺寸，"),s("code",[e._v("flex-basis")]),e._v(" 的值采用元素内容的尺寸。这就解释了：我们给只要给 Flex 元素的父元素声明 "),s("code",[e._v("display: flex")]),e._v(" ，所有子元素就会排成一行，且自动分配小大以充分展示元素的内容。")]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[e._v("flex-grow")])])]),e._v(" "),s("p",[s("code",[e._v("flex-grow")]),e._v("属性只有在所有 flex 元素以"),s("code",[e._v("flex-basis")]),e._v("的值进行排列后，仍有剩余空间的时候才会发挥作用。默认值为 0，即不对剩余空间进行分配。它的语法是：")]),e._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex-grow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <number>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("其包含的值是个比例大小，flex 元素就按比例分配空白的空间。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://allin-bucket.oss-cn-beijing.aliyuncs.com/blog/flex-grow-illustration-2019-12-3.jpg?x-oss-process=style/alin",alt:"flex-grow-illustration-2019-12-3.jpg"}})]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("code",[e._v("flex-shrink")])])]),e._v(" "),s("p",[s("code",[e._v("flex-grow")]),e._v("属性只有在所有 flex 元素以"),s("code",[e._v("flex-basis")]),e._v("的值进行排列后，没有足够的空间时才会发生作用。"),s("code",[e._v("flex-grow")]),e._v("是用于决定增加空间时 flex 元素的表现，而它是用于决定收缩空间时 flex 元素的表现，同一时间，只会有其中一个生效。它的语法是与"),s("code",[e._v("flex-grow")]),e._v("一致，flex 元素按比例大小进行收缩。默认为 1，即如果所有项目的 "),s("code",[e._v("flex-shrink")]),e._v(" 属性都为 1，当空间不足时，都将等比例缩小。")]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("code",[e._v("flex")])])]),e._v(" "),s("p",[s("code",[e._v("flex")]),e._v("属性是"),s("code",[e._v("flex-grow")]),e._v("，"),s("code",[e._v("flex-shrink")]),e._v("，和 "),s("code",[e._v("flex-basis")]),e._v(" 属性的组合属性。其语法是：")]),e._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[e._v("flex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <flex-grow> <flex-shrink> <flex-basis>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("该属性有以下值：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("initial")]),e._v(": 相当于"),s("code",[e._v("flex: 0 1 auto")]),e._v("，")]),e._v(" "),s("li",[s("code",[e._v("auto")]),e._v(": 相当于"),s("code",[e._v("flex: 1 1 auto")]),e._v("，flex 元素在需要的时候既可以拉伸也可以收缩")]),e._v(" "),s("li",[s("code",[e._v("none")]),e._v(": 可以把 flex 元素设置为不可伸缩，相当于"),s("code",[e._v("flex: 0 0 auto")])]),e._v(" "),s("li",[s("code",[e._v("<positive-number>")]),e._v(": "),s("code",[e._v("flex: 1")]),e._v("相当于"),s("code",[e._v("flex: 1 1 0")]),e._v("等。元素可以在"),s("code",[e._v("flex-basis")]),e._v("为 0%的基础上伸缩。")])]),e._v(" "),s("h3",{attrs:{id:"优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[e._v("#")]),e._v(" 优缺点")]),e._v(" "),s("h2",{attrs:{id:"grid-网格布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid-网格布局"}},[e._v("#")]),e._v(" Grid 网格布局")]),e._v(" "),s("h2",{attrs:{id:"table-表格布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-表格布局"}},[e._v("#")]),e._v(" Table 表格布局")]),e._v(" "),s("h2",{attrs:{id:"多列布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多列布局"}},[e._v("#")]),e._v(" 多列布局")])])}),[],!1,null,null,null);t.default=l.exports}}]);